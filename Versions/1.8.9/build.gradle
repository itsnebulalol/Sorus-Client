apply plugin: 'java'

String version = '1.8.9'

configurations {
    jarExport
    compile.extendsFrom(jarExport)
}

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    jarExport group: 'org.slick2d', name: 'slick2d-core', version: '1.0.2'
    compile files("../../sorus/temp/" + version + ".jar")

    File file = new File("${project.parent.parent.projectDir}/sorus/temp/classpath_" + version + ".txt")
    if (file.exists()) {
        Scanner scanner = new Scanner(file)
        while (scanner.hasNextLine()) {
            compile files(scanner.nextLine())
        }
    }
    compile project(':Core')
}

jar {
    manifest.attributes(
            'PreMain-Class': 'org.sorus.oneeightnine.Version',
            'Can-Retransform-Classes': true,
            'Can-Redefine-Classes': true
    )

    from {
        configurations.jarExport.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.register('setup') {
    group = "sorus"

    doLast {
        javaexec {
            main = '-jar'
            args = ["${project.parent.parent.projectDir}/sorus/Sorus-Utils.jar", "outputDependencies", "--minecraftDir", System.getenv('MINECRAFT_HOME'), "--version", version, "--output", project.parent.parent.projectDir.absolutePath + "/sorus/temp/classpath_" + version + ".txt"]
        }
        javaexec {
            main = '-jar'
            args = ["${project.parent.parent.projectDir}/sorus/Sorus-Utils.jar", "outputNatives", "--minecraftDir", System.getenv('MINECRAFT_HOME'), "--version", version, "--nativesOut", project.parent.parent.projectDir.absolutePath + "/run/natives/" + version]
        }
        javaexec {
            main = '-jar'
            args = ["${project.parent.parent.projectDir}/sorus/Sorus-Utils.jar", "reobfuscateJar", "--input", System.getenv('MINECRAFT_HOME') + "/versions/" + version + "/" + version + ".jar", "--output", project.parent.parent.projectDir.absolutePath + "/sorus/temp/" + version + ".jar", "--mappings", project.projectDir.absolutePath + "/src/main/resources/mappings.txt"]
        }
    }
}

tasks.register('export') {
    group = "sorus"
    dependsOn build
    doLast {
        javaexec {
            main = '-jar'
            args = ["${project.parent.parent.projectDir}/sorus/Sorus-Utils.jar", "reobfuscateJar", "--input", project.buildDir.absolutePath + "/libs/" + version + ".jar;" + project.parent.parent.projectDir.absolutePath + "/Core/build/libs/Core.jar", "--output", project.buildDir.absolutePath + "/" + version + ".jar", "--mappings", project.projectDir.absolutePath + "/src/main/resources/mappings.txt", "--originalIndex", "1", "--targetIndex", "0", "--ignored", "lwjgl,newdawn,jcraft"]
        }
    }
    File file = new File(project.buildDir.absolutePath + "/libs/" + version + ".jar")
    file.delete()
}